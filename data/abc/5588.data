[u'https://register.guildwars2.com/account/create - stu.gw2@localghost.com.au - X36mA241OTJ60PqR!', u'https://ifttt.com/session - ifttt@localghost.com.au - op0pop', u'https://api.twitter.com/oauth/authenticate - SadderThanYou - twitterTJ60PqR!', u'https://ebiz.mitel.com/CustomLoginServlet - sturowe - GJAG12', u'https://aus.myconnectwise.net/ -  - cwop0pop', u'https://sso.garmin.com/sso/login - garmin@localghost.com.au - garminop0pop', u'https://arstechnica.com/civis/ucp.php - scouris - arsop0pop', u'https://www.evernote.com/Login.action - scouris - evernoteop0pop', u'https://secure.wildstar-online.com/cgi-bin/plaync_login.pl - wildstar@localghost.com.au - wdop0pop', u'https://www.strava.com/session - strava@localghost.com.au - stravaop0pop', u'https://accounts.coursera.org/signup - combo@localghost.com.au - cop0pop', u'https://go.12wbt.com/login - 12wbt@localghost.com.au - KKiNkdJZIn1F6JavpH74', u'https://github.com/session - cizzit - L83l8b558Dq8nIHGNxuQ', u'https://accounts.logme.in/auth.aspx - support@lecac.com.au - Standard1', u'http://developer.connectwise.com/index.php - srowe@Inlandtechnology.com.au - cwop0pop', u'https://www.system-monitor.com/dashboard/login.php - srowe@inlandtechnology.com.au - TJ60PqR!', u'https://accounts.google.com/ServiceLoginAuth - stuart@localghost.com.au - Itrw,aid,niqais.TJ60PqR!', u'https://www.linkedin.com/uas/login-submit - srowe@inlandtechnology.com.au - liop0pop']